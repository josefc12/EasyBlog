@using EasyBlog.Client.Refit
@using EasyBlog.Client.Services
@using EasyBlog.Client.Components
@using EasyBlog.Shared.Classes
@using EasyBlog.Shared.Dtos

@inject IEasyBlogApi EasyBlogApi
@inject NavigationManager SkibiduNavigation
@inject LoginStateService LoginStateService

<RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Start" Wrap="FlexWrap.Wrap">

    <RadzenStack class="rz-p-4" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="16">
        <RadzenText class="rz-m-0" TextStyle="TextStyle.H5" TextAlign=TextAlign.Center >Articles</RadzenText>
        @if (LoginStateService.IsAdmin == true)
        {
            <RadzenButton class="rz-p-2" Click=@(args => AddArticleClick()) Text="Add article" Size="ButtonSize.Small" ButtonStyle="ButtonStyle.Secondary" />
        }

    </RadzenStack>
    
    @*Skibidi tree had been created for a single, rigit purpose. It loads specific components, specificly nested.*@
    <SkibidiTree Years=@years />

</RadzenStack>

@code {

    private List<EasyBlogTreeNode> years = new List<EasyBlogTreeNode>();

    private bool isLoggedIn;
    protected override async Task OnInitializedAsync()
    {
        // Check login status on initialization
        LoginStateService.OnChange += StateHasChanged;
        LoginStateService.IsLoggedIn = false;

        var yearData = await EasyBlogApi.GetArticleData(Shared.Enums.ArticleDataTypes.Years);
        years = yearData.Select(y => new EasyBlogTreeNode
        {
            Text = y,
            Value = y,
            HasChildren = true
        }).ToList();
        foreach(var yr in years)
        {
            Console.WriteLine(yr.Text);
        }
        StateHasChanged();
    }

    private void AddArticleClick()
    {
        //Navigate to the authoring page
        SkibiduNavigation.NavigateTo("create-article");
    }

}